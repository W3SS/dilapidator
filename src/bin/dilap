#!/usr/bin/env python3
from dilap.geometry.vec3 import vec3
from dilap.io import exporters as io
import dilap.core.context as dcx
import dilap.modeling.model as dmo
import dilap.worldly.world as dwo
import dilap.core.plotting as dtl
import matplotlib.pyplot as plt
import argparse
import os
import pdb


def cube(p=None, q=None, s=None):
    m = dmo.model()
    cx = dcx.context()
    sgv = cx.amodel(p,q,s,m,cx.sgraph.root)
    gm = m.atricube()
    m.normals(gm)
    return cx


def world(seed=0):
    cx = dwo.worldfactory(
        seed=seed, ).new(
            boundary=vec3(0,0,0).pring(250,8),
            landmasses=vec3(0,0,0).pring(100,8), )
    return cx


def main(args):
    print('args')
    print(args)
    context = world(args.seed)
    #context = cube()
    if not os.path.isdir(args.output):
        os.mkdir(args.output)
    io[args.exporter].build_context(context,args.output)


if __name__ == '__main__':
    parser = argparse.ArgumentParser()
    parser.add_argument(
        '-o',
        '--output',
        default=os.path.join(os.getcwd(), 'world'),
        type=str,
        help='Path in which to store resulting data', )
    parser.add_argument(
        '-e',
        '--exporter',
        default='fbx',
        type=str,
        help='Mode used for targeting specific formats (e.g. fbx, obj)', )
    parser.add_argument(
        '-s',
        '--seed',
        default=0,
        type=int,
        help='Random seed used in procedural decision making', )
    args = parser.parse_args()
    main(args)
